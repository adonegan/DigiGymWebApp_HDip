@model IEnumerable<DigiGymWebApp_HDip.Models.Message>
@{
    ViewData["Title"] = "ClientMessages";
}

@{
    int counter = 0; // nice to see a numbered list when there are many conversations
    int maxLength = 40; // to trim content line
    var unreadMessages = ViewBag.UnreadMessages as IEnumerable<DigiGymWebApp_HDip.Models.Message>;
    var unreadConversations = unreadMessages.Select(m => m.ConversationID).Distinct();
}

<div class="container">
    <div class="row pre-footer">

        <h1 class="text-center pt-3">Your Conversations</h1>
        <p class="text-center dashed pb-3">The conversations you've started are listed below. Click 'View Conversation' to see updates.</p>

        <table class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Content</th>
                    <th>Timestamp</th>
                    <th>Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var message in Model)
                {
                    // Check if this message's conversation is in the list of unread conversations
                    var isUnread = unreadConversations.Contains(message.ConversationID);

                    // if content length is greater than 40 chars, cut it off and add ellipsis, otherwise add the content
                    var truncatedContent = message.Content.Length > maxLength
                    ? message.Content.Substring(0, maxLength) + "..."
                    : message.Content;

                    <tr class="@(isUnread ? "table-warning" : "")">
                        <td>@(++counter)</td> @* increment counter *@
                        <td>@truncatedContent</td>
                        <td>@message.Timestamp.ToString("g")</td>
                        <td>
                            @if (isUnread)
                            {
                                <span class="badge badge-colour">New!</span> <!-- Visual indicator for unread messages -->
                            } else
                            {
                                <span class="readMessage">Read</span>
                            }
                        </td>
                        <td><a asp-action="Thread" asp-route-conversationId="@message.ConversationID">View Conversation</a></td>
                    </tr>
                }
            </tbody>
        </table>
        <p class="text-center">
            <a asp-action="Create">Create New Message</a>
        </p>

    </div>
</div>